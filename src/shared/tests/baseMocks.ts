// eslint-disable-next-line @typescript-eslint/ban-types
export const mockRepository = (): object => ({
  createQueryBuilder: jest.fn().mockReturnThis(),
  select: jest.fn().mockReturnThis(),
  addSelect: jest.fn().mockReturnThis(),
  leftJoin: jest.fn().mockReturnThis(),
  leftJoinAndSelect: jest.fn().mockReturnThis(),
  innerJoin: jest.fn().mockReturnThis(),
  innerJoinAndSelect: jest.fn().mockReturnThis(),
  where: jest.fn().mockReturnThis(),
  limit: jest.fn().mockReturnThis(),
  offset: jest.fn().mockReturnThis(),
  orderBy: jest.fn().mockReturnThis(),
  getOne: jest.fn().mockReturnThis(),
  getRawMany: jest.fn().mockReturnThis(),
  getRawOne: jest.fn().mockReturnThis(),
  getCount: jest.fn().mockReturnThis(),
  getMany: jest.fn().mockReturnThis(),
  getManyAndCount: jest.fn(),
  delete: jest.fn().mockReturnThis(),
  query: jest.fn().mockReturnThis(),
  from: jest.fn().mockReturnThis(),
  execute: jest.fn().mockReturnThis(),
  update: jest.fn().mockReturnThis(),
  set: jest.fn().mockReturnThis(),
  distinct: jest.fn().mockReturnThis(),
  andWhere: jest.fn().mockReturnThis(),
  clone: jest.fn().mockReturnThis(),
  find: jest.fn(),
  findOne: jest.fn(),
  findOneOrFail: jest.fn(),
  findAndCount: jest.fn(),
  save: jest.fn(),
  count: jest.fn(),
  insert: jest.fn(),
  manager: {
    transaction: jest.fn(),
  },
});

// eslint-disable-next-line @typescript-eslint/explicit-function-return-type
export const mockManager = () => ({
  createQueryBuilder: jest.fn().mockReturnThis(),
  select: jest.fn().mockReturnThis(),
  innerJoin: jest.fn().mockReturnThis(),
  where: jest.fn().mockReturnThis(),
  andWhere: jest.fn().mockReturnThis(),
  getRepository: jest.fn(),
  findOne: jest.fn(),
  save: jest.fn(),
  update: jest.fn(),
  count: jest.fn(),
  insert: jest.fn(),
  create: jest.fn(),
  find: jest.fn(),
  delete: jest.fn(),
  query: jest.fn(),
  getOne: jest.fn().mockReturnThis(),
  getRawOne: jest.fn().mockReturnThis(),
  transaction: jest.fn(),
  connection: jest.fn().mockReturnThis(),
});
